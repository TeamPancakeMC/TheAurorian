public net.minecraft.world.level.block.StairBlock base #base
public net.minecraft.world.level.block.ComposterBlock add(FLnet/minecraft/world/level/ItemLike;)V #add
public net.minecraft.world.level.block.FarmBlock isNearWater(Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z #isNearWater
public net.minecraft.world.level.block.FarmBlock shouldMaintainFarmland(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z #shouldMaintainFarmland
public net.minecraft.world.level.block.Blocks leaves(Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/Block; #leaves
public net.minecraft.world.level.block.Blocks flowerPot(Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; #flowerPot
public net.minecraft.world.level.block.SpreadingSnowyDirtBlock canBeGrass(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z #canBeGrass
public net.minecraft.world.level.block.SpreadingSnowyDirtBlock canPropagate(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z #canPropagate
public net.minecraft.world.level.block.DoublePlantBlock preventDropFromBottomPart(Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V #preventDropFromBottomPart
public net.minecraft.world.level.block.BaseEntityBlock createTickerHelper(Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; #createTickerHelper
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource; #source
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; #source
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; #source
public net.minecraft.world.item.enchantment.EnchantmentHelper$EnchantmentVisitor #EnchantmentVisitor
public net.minecraft.world.item.enchantment.EnchantmentHelper runIterationOnItem(Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;)V #runIterationOnItem
public net.minecraft.data.worldgen.placement.VegetationPlacements getMushroomPlacement(ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; #getMushroomPlacement
public net.minecraft.data.worldgen.placement.OrePlacements rareOrePlacement(ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; #rareOrePlacement
public net.minecraft.data.worldgen.placement.OrePlacements commonOrePlacement(ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; #commonOrePlacement
public net.minecraft.data.worldgen.placement.OrePlacements orePlacement(Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; #orePlacement
public net.minecraft.data.worldgen.features.TreeFeatures createStraightBlobTree(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;IIII)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; #createStraightBlobTree
public net.minecraft.data.worldgen.features.VegetationFeatures grassPatch(Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; #grassPatch
public net.minecraft.data.worldgen.biome.OverworldBiomes calculateSkyColor(F)I #calculateSkyColor
public net.minecraft.data.worldgen.ProcessorLists EMPTY #EMPTY
public net.minecraft.data.worldgen.SurfaceRuleData * #SurfaceRuleData
public net.minecraft.data.worldgen.SurfaceRuleData surfaceNoiseAbove(D)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; #surfaceNoiseAbove
public net.minecraft.data.worldgen.SurfaceRuleData makeStateRule(Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; #makeStateRule
public net.minecraft.world.level.levelgen.NoiseRouterData underground(Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; #underground
public net.minecraft.world.level.levelgen.NoiseRouterData noiseGradientDensity(Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; #noiseGradientDensity
public net.minecraft.world.level.levelgen.NoiseRouterData getFunction(Lnet/minecraft/core/HolderGetter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/DensityFunction; #getFunction
public net.minecraft.world.level.levelgen.NoiseRouterData slideOverworld(ZLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; #slideOverworld
public net.minecraft.world.level.levelgen.NoiseRouterData postProcess(Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; #postProcess
public net.minecraft.world.level.levelgen.NoiseRouterData none()Lnet/minecraft/world/level/levelgen/NoiseRouter; #none
public net.minecraft.world.level.levelgen.NoiseRouterData * #NoiseRouterData
public net.minecraft.world.level.levelgen.NoiseSettings OVERWORLD_NOISE_SETTINGS #OVERWORLD_NOISE_SETTINGS
public net.minecraft.world.level.levelgen.synth.BlendedNoise * #BlendedNoise
public net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity * #AbstractFurnaceBlockEntity
public net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity isLit()Z #isLit
public net.minecraft.world.entity.LivingEntity checkTotemDeathProtection(Lnet/minecraft/world/damagesource/DamageSource;)Z #checkTotemDeathProtection
public net.minecraft.world.entity.LivingEntity doHurtEquipment(Lnet/minecraft/world/damagesource/DamageSource;F[Lnet/minecraft/world/entity/EquipmentSlot;)V #doHurtEquipment
public net.minecraft.world.entity.LivingEntity makePoofParticles()V #makePoofParticles
public net.minecraft.world.entity.LivingEntity effectsDirty #effectsDirty
public net.minecraft.world.entity.LivingEntity jumping #jumping
public net.minecraft.world.entity.Entity setSharedFlag(IZ)V #setSharedFlag
public net.minecraft.world.entity.animal.Sheep eatAnimationTick #eatAnimationTick
public net.minecraft.world.entity.npc.VillagerTrades$EmeraldsForVillagerTypeItem #EmeraldsForVillagerTypeItem
public net.minecraft.world.entity.monster.Spider$SpiderAttackGoal #SpiderAttackGoal
public net.minecraft.world.entity.monster.Spider$SpiderTargetGoal #SpiderTargetGoal
public net.minecraft.world.entity.ai.goal.LeapAtTargetGoal * #LeapAtTargetGoal
public net.minecraft.world.entity.ai.goal.MeleeAttackGoal * #MeleeAttackGoal
public net.minecraft.core.Direction BY_2D_DATA #BY_2D_DATA
public net.minecraft.core.Direction BY_3D_DATA #BY_3D_DATA
public net.minecraft.core.Holder$Reference bindKey(Lnet/minecraft/resources/ResourceKey;)V #bindKey
public net.minecraft.data.loot.EntityLootSubProvider * #EntityLootSubProvider
public net.minecraft.client.model.HierarchicalModel ANIMATION_VECTOR_CACHE #ANIMATION_VECTOR_CACHE
public net.minecraft.client.Camera move(FFF)V #move
public net.minecraft.client.renderer.LevelRenderer * #LevelRenderer
public net.minecraft.client.renderer.FogRenderer$MobEffectFogFunction #MobEffectFogFunction
public net.minecraft.client.renderer.FogRenderer$MobEffectFogFunction getModifiedVoidDarkness(Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)F #getModifiedVoidDarkness
public net.minecraft.client.renderer.FogRenderer getPriorityFogFunction(Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/client/renderer/FogRenderer$MobEffectFogFunction; # getPriorityFogFunction
public net.minecraft.client.gui.Gui POWDER_SNOW_OUTLINE_LOCATION #POWDER_SNOW_OUTLINE_LOCATION
public net.minecraft.client.gui.Gui renderTextureOverlay(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;F)V #renderTextureOverlay
public net.minecraft.client.gui.screens.inventory.tooltip.TooltipRenderUtil renderFrameGradient(Lnet/minecraft/client/gui/GuiGraphics;IIIIIII)V #renderFrameGradient
public net.minecraft.client.gui.screens.inventory.tooltip.TooltipRenderUtil renderVerticalLine(Lnet/minecraft/client/gui/GuiGraphics;IIIII)V #renderVerticalLine
public net.minecraft.client.gui.screens.inventory.tooltip.TooltipRenderUtil renderVerticalLineGradient(Lnet/minecraft/client/gui/GuiGraphics;IIIIII)V #renderVerticalLineGradient
public net.minecraft.client.gui.screens.inventory.tooltip.TooltipRenderUtil renderHorizontalLine(Lnet/minecraft/client/gui/GuiGraphics;IIIII)V #renderHorizontalLine
public net.minecraft.client.gui.screens.inventory.tooltip.TooltipRenderUtil renderRectangle(Lnet/minecraft/client/gui/GuiGraphics;IIIIII)V #renderRectangle
public net.minecraft.client.gui.screens.inventory.tooltip.ClientTextTooltip text #text
public-f net.minecraft.world.entity.ai.goal.EatBlockGoal IS_TALL_GRASS #IS_TALL_GRASS
public-f net.minecraft.world.entity.LivingEntity getMaxHealth()F #getMaxHealth
public-f net.minecraft.client.model.HumanoidModel * #HumanoidModel